{"version":3,"sources":["components/Header/index.tsx","interfaces/Order.ts","components/Search/index.tsx","utils/api.ts","utils/utils.ts","components/EmployeeTable/index.tsx","components/Employeesd/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Header","Order","Grid","className","container","justify","Typography","variant","align","Search","handleInputChange","TextField","id","label","type","name","onChange","api","axios","get","util","value","empArr","filter","emp","firstName","toLowerCase","includes","lastName","email","phone","city","state","key","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","EmployeeTable","employees","orderBy","handleSort","TableContainer","component","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","colName","colLabel","map","col","TableSortLabel","active","direction","onClick","TableBody","hover","alt","src","picture","gender","Employeesd","loadedEmployees","search","ASC","column","sorted","sort","newOrder","DESC","setState","event","currentTarget","filteredEmps","then","response","empData","data","results","medium","first","last","location","catch","err","console","log","this","Component","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0315f0b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid className=\"Header-heading\" container justify=\"center\">\r\n                <Typography variant=\"h2\" align=\"center\"><i className=\"fas fa-user-friends\"></i>COMPANY DIRECTORY</Typography>\r\n                <Grid className=\"Header-instructions\" container justify=\"center\">\r\n                    <Typography align=\"center\">Search by first or last name or select a column heading to sort. </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;\r\n","export enum Order {\r\n    ASC = \"asc\",\r\n    DESC = \"desc\"\r\n}","import React from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\ntype Props = {\r\n    handleInputChange: any;\r\n}\r\n\r\nconst Search: React.FC<Props> = ({\r\n    handleInputChange,\r\n}) => {\r\n\r\n    return (\r\n        <TextField id=\"standard-search\" label=\"search\" type=\"search\" name=\"search\" variant=\"outlined\" onChange={handleInputChange} />\r\n    )\r\n\r\n}\r\n\r\nexport default Search;","import axios from \"axios\";\r\n\r\nconst api = {\r\n    getEmployees: () => {\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\r\n    }\r\n}\r\n\r\nexport { api }","import Employee from \"../interfaces/Employee\";\r\n\r\nconst util = {\r\n\r\n    \r\n    searchEmp: (value: string, empArr: Employee[]) => {\r\n        let filteredEmps = empArr.filter((emp) => {\r\n            return emp.firstName.toLowerCase().includes(value.toLowerCase()) ||\r\n                emp.lastName.toLowerCase().includes(value.toLowerCase()) ||\r\n                emp.email.toLowerCase().includes(value.toLowerCase()) ||\r\n                emp.phone.toLowerCase().includes(value.toLowerCase()) ||\r\n                emp.city.toLowerCase().includes(value.toLowerCase()) ||\r\n                emp.state.toLowerCase().includes(value.toLowerCase())\r\n        })\r\n        return filteredEmps;\r\n    },\r\n\r\n    \r\n    compareValues: (key: keyof Employee, order = 'asc') => {\r\n        return function innerSort(a: Employee, b: Employee) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                \r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n}\r\n\r\nexport { util }\r\n","import React from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Employee from \"../../interfaces/Employee\";\r\nimport { Order } from \"../../interfaces/Order\";\r\n\r\ntype Props = {\r\n    employees: Employee[];\r\n    orderBy: string;\r\n    order: Order;\r\n    handleSort: any;\r\n\r\n}\r\n\r\nconst EmployeeTable: React.FC<Props> = ({\r\n    employees,\r\n    orderBy,\r\n    order,\r\n    handleSort\r\n}) => {\r\n\r\n    interface ColHeadings {\r\n        colName: string;\r\n        colLabel: string\r\n    }\r\n\r\n    const colHeadings: ColHeadings[] = [\r\n        { colName: 'First Name', colLabel: \"firstName\" },\r\n        { colName: 'Last Name', colLabel: \"lastName\" },\r\n        { colName: 'Gender', colLabel: \"gender\" },\r\n        { colName: 'Email', colLabel: \"email\" },\r\n        { colName: 'Phone Number', colLabel: \"phone\" },\r\n        { colName: 'City', colLabel: \"city\" },\r\n        { colName: 'State', colLabel: \"state\" },\r\n    ]\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table stickyHeader aria-label=\"Employee Table\">\r\n                {/* Table headings with sort icons and click handlers */}\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Picture</TableCell>\r\n                        {colHeadings.map((col: ColHeadings) => {\r\n                            return (\r\n                                <TableCell>{col.colName}\r\n                                    <TableSortLabel active={orderBy === col.colLabel} direction={order} onClick={() => handleSort(col.colLabel, order)}></TableSortLabel>\r\n                                </TableCell>\r\n                            )\r\n                        })}\r\n                    </TableRow>\r\n                </TableHead>\r\n                {/* Create table rows from employees array */}\r\n                <TableBody>\r\n                    {\r\n                        employees.map(emp => {\r\n                            return <TableRow hover key={emp.id}>\r\n                                <TableCell align=\"left\"><img alt={`${emp.firstName} ${emp.lastName}`} src={emp.picture}></img></TableCell>\r\n                                <TableCell align=\"left\">{emp.firstName}</TableCell>\r\n                                <TableCell align=\"left\">{emp.lastName}</TableCell>\r\n                                <TableCell align=\"left\">{emp.gender}</TableCell>\r\n                                <TableCell align=\"left\">{emp.email}</TableCell>\r\n                                <TableCell align=\"left\">{emp.phone}</TableCell>\r\n                                <TableCell align=\"left\">{emp.city}</TableCell>\r\n                                <TableCell align=\"left\">{emp.state}</TableCell>\r\n                            </TableRow>\r\n                        })\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default EmployeeTable;","import React, { Component } from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Header from \"../Header\";\r\nimport Search from \"../Search\";\r\nimport { api } from \"../../utils/api\";\r\nimport { util } from \"../../utils/utils\";\r\nimport Employee from \"../../interfaces/Employee\";\r\nimport EmployeeTable from \"../EmployeeTable\";\r\nimport { Order } from '../../interfaces/Order';\r\nimport \"./style.css\";\r\n\r\n\r\n\r\n\r\nclass Employeesd extends Component<{}, {\r\n    employees: Employee[];\r\n    loadedEmployees: Employee[];\r\n    search: string;\r\n    orderBy: string;\r\n    order: Order;\r\n}> {\r\n\r\n    state = {\r\n        employees: [],\r\n        loadedEmployees: [],\r\n        search: \"\",\r\n        orderBy: \"\",\r\n        order: Order.ASC\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        api.getEmployees()\r\n            .then(response => {\r\n                let empData: Employee[] = response.data.results.map((emp: any) => {\r\n                    return ({\r\n                        id: emp.id.value,\r\n                        picture: emp.picture.medium,\r\n                        firstName: emp.name.first,\r\n                        lastName: emp.name.last,\r\n                        gender: emp.gender,\r\n                        email: emp.email,\r\n                        phone: emp.phone,\r\n                        city: emp.location.city,\r\n                        state: emp.location.state\r\n                    });\r\n                })\r\n                this.setState({\r\n                    employees: empData,\r\n                    loadedEmployees: empData\r\n                })\r\n\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    \r\n    handleSort = (column: keyof Employee, order: Order) => {\r\n        let sorted = [...this.state.employees].sort(util.compareValues(column, order));\r\n        let newOrder = order === Order.ASC ? Order.DESC : Order.ASC\r\n        this.setState({\r\n            employees: sorted,\r\n            orderBy: column,\r\n            order: newOrder\r\n        });\r\n    }\r\n\r\n    \r\n    handleInputChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n        \r\n        const { value } = event.currentTarget;\r\n\r\n        this.setState({\r\n            search: value\r\n        }, () => {\r\n            \r\n            if (this.state.search) {\r\n                let filteredEmps = util.searchEmp(this.state.search, this.state.loadedEmployees);\r\n                this.setState({\r\n                    employees: filteredEmps,\r\n                    orderBy: \"\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    employees: this.state.loadedEmployees,\r\n                    orderBy: \"\"\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Employeesd-container\">\r\n                <Header />\r\n                <Grid className=\"Employeesd-search\" container justify=\"center\">\r\n                    <Search handleInputChange={this.handleInputChange} />\r\n                </Grid>\r\n                <Grid className=\"Employeesd-table\">\r\n                    <EmployeeTable employees={this.state.employees} handleSort={this.handleSort} orderBy={this.state.orderBy} order={this.state.order} />\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Employeesd;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Employeesd from './components/Employeesd';\n\n\nfunction App() {\n  return (\n    <Container>\n      <Employeesd />\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}